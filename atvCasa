#ifdef __APPLE__
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif

#include <stdlib.h>
#include <stdio.h>

void display(void) {
	glClearColor(0.40f, 0.40, 0.40f, 0.0f); //Define a cor de fundo da cena (cor usada para limpar o buffer de cor)
	glClear(GL_COLOR_BUFFER_BIT);//Inicializa o buffer de cores antes de ele ser alterado

	glMatrixMode(GL_MODELVIEW); //Informa que as operações seguintes serão executadas na matrix modelview
	glLoadIdentity(); //Carrega a matriz identidade

	glPointSize(5); //Define quantos pixels representarão um vértice na tela
	glLineWidth(5);
	glBegin(GL_QUADS);//parede frontal
		glColor3f(0.85f,0.85f,0.85f);
		glVertex2f(-0.25f,-0.25f);
		glVertex2f(-0.25f,0.25f);
		glVertex2f(0.25f,0.25f);
		glVertex2f(0.25f,-0.25f);
	glEnd();

	glBegin(GL_TRIANGLES);//telhado
		glColor3f(0.7f, 0.1f, 0.06f);
		glVertex2f(-0.25f,0.25f);
		glVertex2f(0.25f,0.25f);
		glVertex2f(0.0f,0.50f);
	glEnd();
	
	glBegin(GL_QUADS);//telhado quadrado
		glColor3f(0.8f, 0.2f, 0.07f);
		glVertex2f(0.25f,0.25f);
		glVertex2f(0.0f,0.50f);
		glVertex2f(0.45f,0.60f);
		glVertex2f(0.61f,0.35f);
	glEnd();
	
	glBegin(GL_QUADS);//parede lateral
		glColor3f(0.95f,0.95f,0.95f);
		glVertex2f(0.25f,0.25f);
		glVertex2f(0.25f,-0.25f);
		glVertex2f(0.60f,-0.10f);
		glVertex2f(0.60f,0.35f);
	glEnd();
	
	
	glBegin(GL_QUADS);//porta
		glColor3f(0.7f, 0.1f, 0.06f);
		glVertex2f(-0.10f,-0.25f);//a
		glVertex2f(-0.10f,0.10f);//b
		glVertex2f(0.10f,0.10f);//c
		glVertex2f(0.10f,-0.25f);//d
	glEnd();
	glBegin(GL_QUADS);
		glColor3f(0.48f, 0.38f, 0.30f);
		glVertex2f(0.06f,-0.10f);//a
		glVertex2f(0.06f,-0.05f);//b
		glVertex2f(0.10f,-0.05f);//c
		glVertex2f(0.10f,-0.10f);//d
	glEnd();
	
	glBegin(GL_QUADS);//janela
		glColor3f(0.0f, 1.0f, 0.0f);
		glVertex2f(0.35f,0.0f);//a
		glVertex2f(0.35f,0.15f);//b
		glColor3f(0.81f, 0.89f,0.92f);
		glVertex2f(0.50f,0.20f);//c
		glVertex2f(0.50f,0.06f);//d
	glEnd();	
	glBegin(GL_LINES);
		glColor3f(0.48f, 0.38f, 0.30f);
		glVertex2f(0.43f,0.18f);
		glVertex2f(0.43f,0.04f);
	glEnd();
	
	glBegin(GL_QUADS);//topo da arvore
		glColor3f(0.0f, 1.0f, 0.0f);
		glVertex2f(0.70f,0.0f);
		glVertex2f(0.70f,0.20f);
		glVertex2f(0.85f,0.25f);
		glVertex2f(0.85f,0.05f);
	glEnd();
	
	glBegin(GL_QUADS);//raiz da arvore
		glColor3f(0.58f, 0.30f, 0.17f);
		glVertex2f(0.75f,-0.25f);
		glVertex2f(0.75f,0.02f);
		glVertex2f(0.80f,0.04f);
		glVertex2f(0.80f,-0.25f);
	glEnd();
	
	
	glFlush(); //Informa que as operações devem ser processadas imediatamente e exibidas na tela
}


int main(int argc, char *argv[]) {
	glutInit(&argc, argv); //Inicializa a OpenGL
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB); //Configura os modos de exibição (mais detalhes no futuro)
	glutInitWindowSize(500, 500); //Define o tamanho da janela em pixels
	glutInitWindowPosition(0, 0); //Define a posição inicial da janela
	glutCreateWindow("Primeiro Exemplo"		); //Cria a janela especificando seu título
	glutDisplayFunc(display); //Especifica a função de rendering (exibe a cena no loop)

	glutMainLoop(); //Executa o loop de renderização
	return 0;
}
